case IF:
    lv = novoLabel();
    lf = novoLabel();
    gerarExpRel(r -> ptr1, lv, lf);
    gravarLabel(lv);
    gerar(r -> ptr2);
    gravarLabel(lf);
    break;
case IF-ELSE:
    lv = novoLabel();
    lf = novoLabel();
    laux = novoLabel();
    gerarExpRel(r -> ptr1, lv, lf);
    gravarLabel(lv);
    gerar(r -> ptr2);
    gerarGoto(laux);
    gerarLabel(lf);
    gerar(r -> ptr3);
    break;
case WHILE:
    lv = novoLabel();
    lf = novoLabel();



void gerarExprLR(AST *r, int lv, int lf){
    switch(r -> cod){
        case Menor:
            gerar(r -> ptr1);
            gerar(r -> ptr2);
            if_icmplt lv
            print(goto lf);
            print(break);
        case Maior:
            gerar(r -> ptr1);
            gerar(r -> ptr2);
            print(if_icmpgt lv);
            print(goto lf);
            break;
        case &&:
            laux = novoLabel();
            gerarExprLR(r -> ptr1, laux, lf);
            gravarLabel(laux);
            gerarExprLR(r -> ptr2, lv, lf);
            break;
        case ||:
            laux = novoLabel();
            gerarExprLR(r -> ptr1, lv, laux);
            gravarLabel(laux);
            gerarExprLR(r -> ptr2, lv, lf);
            break;
        case !:
            gerarExprLR(r -> ptr1, lf, lv);
            break;
    }
}


################################################################################################################################
Funções:

int fat(int n){
    if(n == 0){
        return 1;
    }
    return n * fat(n - 1);
}
{
    int x;
    x = fat(5);
}

------------------------------------------
iconst_5
invokestatic fat(I)I

#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@
    iload 0
    iconst_0
    if_icmpeq L1
    goto L2
L1:
    iconst_1
    return
L2:
    iload 0
    iload 0
    iconst_1
    isub
    invokestatic fat(I)I
    imul
    return
